/*
**********************************************************************
  IMPORTS
**********************************************************************
*/


var CASE_STUDIES = require("users/stamlazaros/hua:t-h-e-s-i-s/configurations/case_studies");


/*
**********************************************************************
  PARAMETERS
**********************************************************************
*/

// EMS case of interest.
var caseCode = "emsr692";
var caseArea = "magnesia";

// Projection of interest.
var projectionCRS = "EPSG:4326";
var projectionScale = 10;

// Vectors of interest.
var vectors = ee.FeatureCollection("...");
var destinationPath = "...";


/*
********************************************************************
  CONFIGURATION
********************************************************************
*/


// GEE assets.
var caseConfig = CASE_STUDIES.cases[caseCode][caseArea];
var areaOfInterest = caseConfig.area_of_interest.geometry();
var ring = ee.Geometry.LinearRing(areaOfInterest.coordinates().flatten());


/*
****************************************************************
  COMPUTATIONS
****************************************************************
*/


// Define projection of interest.
var projection = ee.Projection(projectionCRS).atScale(projectionScale);

// Generate a random raster for vector quality assessment.
var raster = ee.Image.random().clip(areaOfInterest).reproject(projection);

// Assign `class` property.
vectors = vectors.map(function(vector){
  return vector.set("class", 1);
});

// Reproject vectors.
var reprojectedVectors = vectors.reduceToImage({
    reducer: ee.Reducer.first(),
    properties: ["class"]
  })
  .rename(["class"])
  .reproject(projection)
  .reduceToVectors({
    reducer: ee.Reducer.countEvery(),
    crs: projectionCRS,
    scale: projectionScale,
    labelProperty: "class",
    geometry: areaOfInterest,
    maxPixels: 1e13
  });


/*
**************************************************************
  VISUALIZATION
**************************************************************
*/


Map.addLayer(raster.randomVisualizer(), {}, "rasters: random");

Map.addLayer(vectors, {color: "white"}, "vectors: original");
Map.addLayer(reprojectedVectors, {color: "black"}, "vectors: reprojected");

Map.addLayer(ring, {}, "vectors: ring");
Map.centerObject(areaOfInterest);


/*
**************************************************************
  EXPORT
**************************************************************
*/


Export.table.toAsset({
  collection: reprojectedVectors,
  assetId: destinationPath,
  description: "vectors",
});
